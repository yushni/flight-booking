openapi: 3.0.3
info:
  title: Flight Booking Routes API
  description: API for aggregating flight route information from multiple providers
  version: 1.0.0
  contact:
    name: FunWithFlights
    email: api@funwithflights.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.funwithflights.com
    description: Production server

paths:
  /health:
    get:
      summary: Health check
      description: Check the health status of the API
      operationId: healthCheck
      tags:
        - health
      responses:
        "200":
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
  /api/v1/routes:
    get:
      summary: Get flight routes
      description: Retrieve aggregated flight route information from multiple providers
      operationId: getRoutes
      tags:
        - routes
      parameters:
        - name: airline
          in: query
          description: Filter by airline code
          required: false
          schema:
            type: string
            pattern: "^[A-Z]{2}$"
            example: "AA"
        - name: sourceAirport
          in: query
          description: Filter by source airport code
          required: false
          schema:
            type: string
            pattern: "^[A-Z]{3}$"
            example: "JFK"
        - name: destinationAirport
          in: query
          description: Filter by destination airport code
          required: false
          schema:
            type: string
            pattern: "^[A-Z]{3}$"
            example: "LAX"
        - name: maxStops
          in: query
          description: Maximum number of stops
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 10
            example: 2
        - name: limit
          in: query
          description: Maximum number of routes to return
          required: false
          schema:
              type: integer
              minimum: 1
              maximum: 1000
              default: 100
              example: 50
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
              type: integer
              minimum: 0
              default: 0
              example: 10
      responses:
        "200":
          description: Successful response with flight routes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    FlightRoute:
      type: object
      required:
        - airline
        - sourceAirport
        - destinationAirport
        - codeShare
        - stops
      properties:
        airline:
          type: string
          description: Airline code (IATA 2-letter code)
          pattern: "^[A-Z]{2}$"
          example: "AA"
        sourceAirport:
          type: string
          description: Source airport code (IATA 3-letter code)
          pattern: "^[A-Z]{3}$"
          example: "JFK"
        destinationAirport:
          type: string
          description: Destination airport code (IATA 3-letter code)
          pattern: "^[A-Z]{3}$"
          example: "LAX"
        codeShare:
          type: string
          description: Code share information
          enum: ["Y", "N"]
          example: "Y"
        stops:
          type: integer
          description: Number of stops
          minimum: 0
          maximum: 10
          example: 1
        equipment:
          type: string
          description: Equipment type (optional)
          example: "737"
          nullable: true
        provider:
          type: string
          description: Data provider source
          example: "provider1"
        provider2:
          type: string
          description: Data provider source
          example: "provider1"

    RoutesResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/FlightRoute"
          description: Array of flight routes

    ErrorResponse:
      type: object
      required:
        - error
        - code
        - timestamp
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request parameters"
        code:
          type: integer
          description: HTTP status code
          example: 400
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2023-12-01T10:30:00Z" 