version: '3.8'

services:
  flight-booking:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - FLIGHT_BOOKING_SERVER_PORT=8080
      - FLIGHT_BOOKING_SERVER_HOST=0.0.0.0
      - FLIGHT_BOOKING_LOG_LEVEL=info
      - FLIGHT_BOOKING_LOG_FORMAT=json
      - FLIGHT_BOOKING_CACHE_ENABLED=true
      - FLIGHT_BOOKING_CACHE_DEFAULT_TTL=5m
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER1_ENABLED=true
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER1_BASE_URL=https://api.provider1.com
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER1_TIMEOUT=10s
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER1_RETRIES=3
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER2_ENABLED=true
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER2_BASE_URL=https://api.provider2.com
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER2_TIMEOUT=10s
      - FLIGHT_BOOKING_PROVIDERS_PROVIDER2_RETRIES=3
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - flight-booking-network

  # Mock provider 1 for testing
  mock-provider1:
    image: mockoon/cli:latest
    ports:
      - "3001:3001"
    volumes:
      - ./mock-data/provider1.json:/tmp/provider1.json
    command: ["--data", "/tmp/provider1.json", "--port", "3001"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - flight-booking-network

  # Mock provider 2 for testing
  mock-provider2:
    image: mockoon/cli:latest
    ports:
      - "3002:3002"
    volumes:
      - ./mock-data/provider2.json:/tmp/provider2.json
    command: ["--data", "/tmp/provider2.json", "--port", "3002"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - flight-booking-network

networks:
  flight-booking-network:
    driver: bridge 